# vim: set syntax=sh ft=zsh :

_source_file() {
	if [ ! -z "$1" ] && [ -f "$1" ]; then
		source "$1"
		return 0
	fi
	return 1
}

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export OS_NAME=$( uname -s | tr '[:upper:]' '[:lower:]' )
export EDITOR="vim"
export GIT_EDITOR='vim'

if [ -n "$BASH_VERSION" ]; then
	shell=bash
elif [ -n "$ZSH_VERSION" ]; then
	shell=zsh
elif [ ! -z $SHELL ]; then
	shell=$(basename $SHELL)
else
	shell=$(which zsh)
fi

source ~/.iterm2_shell_integration.$shell

export PATH=/opt/homebrew/bin:$HOME/.local/bin:$PATH

#############################
# Configure fzf
#############################
export FZF_BASE="$HOME/.fzf"

# Use ripgrep for feeding into fzf for searching files.
export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden'

# OceanNext color scheme for fzf
_source_file ~/.config/colors/base16-fzf/bash/base16-oceanicnext.config
unset _gen_fzf_default_opts

# Bind F1 key to toggle preview window on/off
FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS' --bind "F1:toggle-preview" --preview "rougify {} 2> /dev/null || cat {} 2> /dev/null || tree -C {} 2> /dev/null | head -100"'

# Color: https://github.com/junegunn/fzf/wiki/Color-schemes - Solarized Dark
#FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
#--color fg:#D8DEE9,bg:#2E3440,hl:#A3BE8C,fg+:#D8DEE9,bg+:#434C5E,hl+:#A3BE8C
#--color pointer:#BF616A,info:#4C566A,spinner:#4C566A,header:#4C566A,prompt:#81A1C1,marker:#EBCB8B
#'

export FZF_DEFAULT_OPTS

# Show long commands if needed
# From https://github.com/junegunn/fzf/wiki/Configuring-shell-key-bindings
# Bind F1 key to toggle preview window on/off
export FZF_CTRL_R_OPTS='--bind "F1:toggle-preview" --preview "echo {}" --preview-window down:3:hidden:wrap'

_source_file ~/.shell_config_custom

_source_file ~/.bash_aliases

eval "$(zoxide init $shell)"

eval "$(direnv hook $shell)"

eval "$(starship init $shell)"
unset _source_file
unset shell


# Press <C-z> in shell to bring the last suspended process to foreground
# Useful to toggle between vim and shell using <C-z>
if [ "$-" != "${-#*i}" ]; then
  if [ -n "$BASH_VERSION" ]; then
    stty susp undef
    bind '"\C-z":" fg\015"'
  elif [ -n "$ZSH_VERSION" ]; then
	fg_widget() {
      fg
    }
    stty susp undef
    zle -N fg_widget
    bindkey '^Z' fg_widget
  fi
else
  echo "Non-interactive shell"
fi

# Fix Missing or Unsuitable Terminal xterm-ghostty
if [[ "$TERM_PROGRAM" == "ghostty" ]]; then
    export TERM=xterm-256color
fi
