#  Display Settings

# Neovim proper 256 color support
set -g  default-terminal "screen-256color"
# needed for proper nvim/tmux/base16 colors
set-option -sa terminal-overrides ",xterm*:Tc"
# set -ga terminal-overrides ",xterm-256color:Tc"

# # Set border colors
# set-option -g pane-border-style 'fg=#343D46,bg=colour0'
# set-option -g pane-active-border-style 'fg=colour3,bg=colour0'

# Set status line message style
set -g message-style "fg=colour5,bg=default"

# Set mode style (including history bar)
set -g mode-style "fg=colour3"

# General Settings
# ================

# setw - set window option
setw -q -g utf8 on
# Enable scroll
set -g mouse on

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# Increase history limit size
set-option -g history-limit 20000

# Send escape key to neovim immediately
set-option -sg escape-time 1

# Start windows and panes at 1, not 0
# set -g base-index 1
# set -g pane-base-index 1

# Key Bindings
# ============

# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# Open new windows in current path
bind c new-window -c "#{pane_current_path}"

# Split panes using | and -
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

setw -g mode-keys vi # Use vim keybindings in copy mode

# Setup 'v' to begin selection as in Vim
bind-key -T edit-mode-vi Up                send-keys -X history-up
bind-key -T edit-mode-vi Down              send-keys -X history-down
bind-key -T copy-mode-vi v                 send      -X begin-selection
bind-key -T copy-mode-vi [                 send-keys -X begin-selection
bind-key -T copy-mode-vi y                 send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi ]                 send-keys -X copy-selection
bind-key -T copy-mode-vi C-v               send-keys -X rectangle-toggle
bind-key p paste-buffer

# Resize panes - C-a <arrow key>
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4
unbind Left
bind Left resize-pane -L 10
unbind Right
bind Right resize-pane -R 10
# Maximize current pane
unbind m
bind m resize-pane -Z

# Edit configuration
unbind e
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Reloaded ~/.tmux.conf\"'"

# Reload configuration
unbind r
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf sourced"

# smart pane switching with awareness of vim splits
# https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'arcticicestudio/nord-tmux'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @plugin 'dracula/tmux'

# Status Bar
# ==========

# Enable status bar
set-option -g status on

# Set window list to center
set -g status-justify centre

# set -g @thumbs-key F
set -g @thumbs-command 'echo -n {} | xclip -sel clip'

# Auto-hide status bar if pane is maximized
set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'


if-shell 'test "$(uname)" = "Darwin" -a -e ~/.tmux.osx.conf' 'source ~/.tmux.osx.conf'
if-shell 'test "$(uname)" = "Linux" -a -e ~/.tmux.linux.conf' 'source ~/.tmux.linux.conf'

if '[ -f ~/.tmux.local.conf ]' 'source ~/.tmux.local.conf'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

