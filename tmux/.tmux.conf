# General Settings
# ================
# setw - set window option
set -g mouse on                          # Enable scroll

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity off                # Degrades tmux-thumbs performance

set -g history-limit 20000                # Increase history limit size

set-option -sg escape-time 10             # Send escape key to neovim immediately
set -sg repeat-time 600                   # increase repeat timeout
set -g focus-events on                    # allow passing focus events to vim

# start windows and panes at 1, not 0
# 0 is too far from `
set -g base-index 1
set -g pane-base-index 1

# Key Bindings
# ============

# remap prefix to Control + a
set -g prefix C-a
# bind 'C-a C-a' to type 'C-a'
bind C-a send-prefix
unbind C-b

# Open new windows in current path
bind c new-window -c "#{pane_current_path}"

# Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

setw -g mode-keys vi # Use vim keybindings in copy mode

# Setup 'v' to begin selection as in Vim
bind-key -T edit-mode-vi Up                send-keys -X history-up
bind-key -T edit-mode-vi Down              send-keys -X history-down
bind-key -T copy-mode-vi v                 send      -X begin-selection
bind-key -T copy-mode-vi [                 send-keys -X begin-selection
bind-key -T copy-mode-vi y                 send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi Enter             send-keys -X copy-pipe-and-cancel
bind-key -T copy-mode-vi ]                 send-keys -X copy-selection
bind-key -T copy-mode-vi C-v               send-keys -X rectangle-toggle
bind-key P paste-buffer

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g status-keys vi

set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"
# needed for proper nvim/tmux/base16 colors
# set-option -sa terminal-overrides ",xterm*:Tc"
#set -ga terminal-overrides ",xterm-256color:Tc"

# Resize panes - C-a <arrow key>
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4
unbind Left
bind Left resize-pane -L 10
unbind Right
bind Right resize-pane -R 10
# Maximize current pane
unbind m
bind m resize-pane -Z

# Edit configuration
bind e new-window -n '~/.tmux.local.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.local.conf && tmux source ~/.tmux.conf && tmux display \"Reloaded ~/.tmux.conf\"'"

# Reload configuration
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# set -g status-style bg=default
# # set -g status-left '#(cat #{socket_path}-\#{session_id}-vimbridge)'
# set -g @dracula-show-left-icon '#(whoami)@#(hostname) #(host `hostname` | head -1| cut -d " " -f 4) Ôåç #(cat #{socket_path}-\#{session_id}-vimbridge)'
# set -g status-left-length 100
# set -g status-right '#(cat #{socket_path}-\#{session_id}-vimbridge-R)'
# set -g status-right-length 100
# set -g status-justify centre
# set -g window-status-current-format "#[fg=colour4]\uE0B6#[fg=colour7,bg=colour4]#{?window_zoomed_flag,#[fg=yellow]üîç,}#W#[fg=colour4,bg=default]\uE0B4"
# set -g window-status-format "#[fg=colour244]\uE0B6#[fg=default,bg=colour244]#W#[fg=colour244,bg=default]\uE0B4"
# #set -g status-justify centre # optionally put the window list in the middle

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# C-h is more useful as backspace. Hence map it to <Prefix>+h
bind h select-pane -L
bind l select-pane -L
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Tmux Plugin Manager. Press
# <Prefix>+I to fetch plugins
# <Prefix>+U to update plugin
# <Prefix>+alt+u to remove plugins
# List of plugins
set -g @tpm_plugins '          \
  tmux-plugins/tpm             \
  tmux-plugins/tmux-sensible   \
  tmux-plugins/tmux-yank       \
  fcsonline/tmux-thumbs        \
  dracula/tmux                 \
'

set -g @dracula-show-powerline true
set -g @dracula-plugins "time"
set -g @dracula-show-timezone false
set -g @dracula-border-contrast true
# set -g @dracula-show-left-sep ÓÇ∏
set -g @dracula-show-right-sep ÓÇ∫

# Status Bar
# ==========

set-option -g status on                   # Enable status bar
set -g status-position top
set -g status-justify centre              # Set window list to center

set -g @thumbs-key F
#set -g @thumbs-command 'echo -n {} | xclip -sel clip'

# Auto-hide status bar if pane is maximized
set-hook -g 'after-resize-pane'  'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_zoomed_flag} -eq 1 ]; then tmux set status off; else tmux set status on; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_zoomed_flag} -gt 1 ]; then tmux set status off; else tmux set status on; fi"'


# Overrides for tmux running on remote machine
if-shell 'test -n "$SSH_CLIENT" -a -e ~/.tmux/.tmux.remote.conf' \
    'source-file ~/.tmux/tmux.remote.conf'

if-shell 'test "$(uname)" = "Darwin" -a -e ~/.tmux.osx.conf' 'source ~/.tmux.osx.conf'
if-shell 'test "$(uname)" = "Linux" -a -e ~/.tmux.linux.conf' 'source ~/.tmux.linux.conf'

# Per machine overrides
if '[ -f ~/.tmux.local.conf ]' 'source ~/.tmux.local.conf'

if "test ! -d ~/.tmux/plugins/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
